MAIN

MAIN   ::=  FRAME*


FRAME  ::= .__. STRUCT .__.            ##transf2-> $(__endl__)$(STRUCT)$(__endl__)

STRUCT ::= id .__. {  FIELDS  }        ##transf2-> $(id) {$(__ident+__)$(FIELDS)$(__ident-__)}


FIELDS ::=  NAMED  PROP                ##transf2-> "type": "struct",$(__endl__)"fields" : { $(__ident+__)$(NAMED)$(__ident-__)},$(__endl__) "prop" : $(PROP)$(__endl__)
FIELDS ::=  NAMED                      ##transf2-> "type": "struct",$(__endl__)"fields" : { $(__ident+__)$(NAMED)$(__ident-__)}
FIELDS ::=  TUPLE                      ##transf2-> "type": "tuple",$(__endl__)"fields" : { $(__ident+__)$(TUPLE)$(__ident-__)}
FIELDS ::=  UNION
FIELDS ::=  ENUMERATION


NAMED ::=  .__.   id   ._. : ._.   FULL_TYPE   ._.   endl    .__.   NAMED    ##transf2-> name: "$(id)", $(FULL_TYPE),$(__endl__)$(NAMED)
NAMED ::=  .__.   id   ._. : ._.   FULL_TYPE   ._.   ,       .__.   NAMED    ##transf2-> name: "$(id)", $(FULL_TYPE),$(__endl__)$(NAMED)
NAMED ::=  .__.   id   ._. : ._.   FULL_TYPE   .__.                          ##transf2-> name: "$(id)", $(FULL_TYPE)
NAMED ::=  NAMED_SUB
NAMED ::=  NAMED_IMPL_SUB

NAMED_SUB          ::= .__.   id   ._. : .__.   STRUCT       .__.   NAMED
NAMED_SUB          ::= .__.   id   ._. : .__.   STRUCT       .__.
NAMED_IMPL_SUB     ::= .__.   id   ._. :        ANON_STRUCT  .__.   NAMED
NAMED_IMPL_SUB     ::= .__.   id   ._. :        ANON_STRUCT  .__.
ANON_STRUCT        ::= .__. {  FIELDS   }


TUPLE ::=  .__.   TUPLE_TYPE   ._.   endl    .__.  TUPLE                         ##transf2-> "" : $(TUPLE_TYPE),$(__endl__)$(TUPLE)
TUPLE ::=  .__.   TUPLE_TYPE   ._.   ,       .__.  TUPLE                         ##transf2-> "" : $(TUPLE_TYPE),$(__endl__)$(TUPLE)
TUPLE ::=  .__.   TUPLE_TYPE   .__.                                              ##transf2-> "" : $(TUPLE_TYPE)

TUPLE_TYPE  ::=  BASIC_TYPE                                                      ##transf2-> "type_info": { "basic_type": $(BASIC_TYPE), "modif": "none", "default": "none" }

UNION ::=  .__.   | ._.  id   ._. : ._.   B_L_TYPE   ._.   endl    .__.  UNION
UNION ::=  .__.   | ._.  id   ._. : ._.   B_L_TYPE   ._.   ,       .__.  UNION
UNION ::=  .__.   | ._.  id   ._. : ._.   B_L_TYPE   .__.

ENUMERATION ::=  .__.   | ._.  id   ._.   endl    .__.  ENUMERATION
ENUMERATION ::=  .__.   | ._.  id   ._.   ,       .__.  ENUMERATION
ENUMERATION ::=  .__.   | ._.  id   .__.


FULL_TYPE  ::=  TYPE_LIST
FULL_TYPE  ::=  TYPE_OPTIONAL
FULL_TYPE  ::=  TYPE_RECOMENDED
FULL_TYPE  ::=  TYPE_WITH_DEFAULT_DATE
FULL_TYPE  ::=  TYPE_WITH_DEFAULT
FULL_TYPE  ::=  BASIC_TYPE                    ##transf2-> "type_info": { "basic_type": $(BASIC_TYPE), "modif": "none", "default": "none" }


B_L_TYPE  ::=  BASIC_TYPE
B_L_TYPE  ::=  TYPE_LIST

BASIC_TYPE  ::= string  ##transf2-> "string"
BASIC_TYPE  ::= double  ##transf2-> "double"
BASIC_TYPE  ::= int32   ##transf2-> "int32"
BASIC_TYPE  ::= int64   ##transf2-> "int64"

TYPE_LIST  ::= BASIC_TYPE [ ]

TYPE_OPTIONAL   ::= BASIC_TYPE ?
TYPE_RECOMENDED ::= BASIC_TYPE !

TYPE_WITH_DEFAULT_DATE  ::= BASIC_TYPE [< !>]* >] [<   # # # # - # # - # #   >]
TYPE_WITH_DEFAULT       ::= BASIC_TYPE [< !>]* >]

PROP  ::=  .__.  prop : _ endl  PROP_LINE*
PROP_LINE ::=  !} !endl* endl
prop ::= 'prop'






string ::= 'string'
double ::= 'double'
int32  ::= 'int32'
int64  ::= 'int64'




.__.  ::=  __  MULTILINE_COMMENT  .__.    ##transf2-> $(__nothing__)
.__.  ::=  __  SINGLELINE_COMMENT .__.    ##transf2-> $(__nothing__)
.__.  ::=  __                             ##transf2-> $(__nothing__)
._.   ::=  _   MULTILINE_COMMENT  ._.     ##transf2-> $(__nothing__)
._.   ::=  _   SINGLELINE_COMMENT         ##transf2-> $(__nothing__)
._.   ::=  _                              ##transf2-> $(__nothing__)

SINGLELINE_COMMENT   ::=  _  /_/  !endl*              ##transf2-> $(__nothing__)
MULTILINE_COMMENT    ::=  /*_  IN_ML_COMMENT*  _*/    ##transf2-> $(__nothing__)
IN_ML_COMMENT        ::=  u__                         ##transf2-> $(__nothing__)
IN_ML_COMMENT        ::=  !_*/                        ##transf2-> $(__nothing__)


/*_   ::=  '/*'
_*/   ::=  '*/'
!_*/  ::=  !'*/'
/_/   ::=  '//'


_      ::=  ([ \t]*)  
__     ::=  __isspace*__
u__    ::=  __isspace__
endl   ::=  __endl__
!endl  ::= !__endl__


id  ::=  ([_A-Za-z][A-Za-z0-9_]*)
{   ::=  '{'
}   ::=  '}'
!}  ::=  !'}'
:   ::=  ':'
,   ::=  ','
|   ::=  '|'
[   ::=  '['
]   ::=  ']'
?   ::=  '?'
!   ::=  '!'
[<  ::=  '[<'
>]  ::=  '>]'
!>] ::=  !'>]'
#   ::=  ([0-9])
-   ::=  '-'